// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String
  role            Role     @default(USER)
  createdAt       DateTime @default(now())
  
  aufenthalte     Aufenthalt[]
}

model Aufenthalt {
  id                   Int      @id @default(autoincrement())
  userId               Int
  ankunft              DateTime
  abreise              DateTime
  zaehlerAnkunft       Float    // Ölzählerstand bei Ankunft
  zaehlerAbreise       Float    // Ölzählerstand bei Abreise  
  anzahlMitglieder     Int      // Anzahl Mitglieder der WG
  anzahlGaeste         Int      // Anzahl Gäste
  jahr                 Int      // Für Abschluss-Logic
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id])
}

model Tankfuellung {
  id            Int      @id @default(autoincrement())
  datum         DateTime
  liter         Float
  preisProLiter Float
  zaehlerstand  Float    // Zählerstand nach Tankfüllung
  createdAt     DateTime @default(now())
}

model Preise {
  jahr                      Int   @id
  oelpreisProLiter          Float
  uebernachtungMitglied     Float // Preis pro Nacht für WG-Mitglieder
  uebernachtungGast         Float // Preis pro Nacht für Gäste
  verbrauchProStunde        Float @default(5.5) // Liter Öl pro Brennerstunde (Fallback)
  istBerechnet              Boolean @default(false) // true wenn aus Tankdaten berechnet
}

model JahresAbschluss {
  jahr                Int      @id
  zaehlerstand        Float    // Zählerstand am Jahresende
  gesamtKosten        Float    // Gesamtkosten des Jahres
  anzahlAufenthalte   Int      // Anzahl Aufenthalte im Jahr
  verbrauchProStunde  Float    // Verbrauch pro Stunde (Fallback oder berechnet)
}

enum Role {
  ADMIN
  USER
}
